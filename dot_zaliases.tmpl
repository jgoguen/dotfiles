# vim: set noexpandtab tabstop=2 shiftwidth=2 autoindent:
# vim: set foldmarker=[[[,]]] foldmethod=marker foldlevel=0:
# Do not edit this file directly! It is managed by chezmoi.

HOSTNAME_BIN="$(command -pv hostname)"
HOSTNAMECTL_BIN="$(command -pv hostnamectl)"
if [ -z "${HOSTNAME_BIN}" ] && [ -n "${HOSTNAMECTL_BIN}" ]; then
	alias hostname="${HOSTNAMECTL_BIN} status --static"
fi

{{ if ne .chezmoi.os "openbsd" -}}
alias egrep="$(command -pv egrep) --color=auto"
alias fgrep="$(command -pv fgrep) --color=auto"
alias find="$(command -pv find) -L"
alias grep="$(command -pv grep) --color=auto"
{{- end }}

alias focusfix='printf "\e[?1004l"'

DIG_BIN="$(command -pv dig)"
if [ -n "${DIG_BIN}" ]; then
	alias ip4="${DIG_BIN} +short -4 myip.opendns.com @resolver1.opendns.com"
	alias ip6="${DIG_BIN} +short -6 -t AAAA myip.opendns.com @resolver1.opendns.com"
fi

alias less="$(command -pv less) -FRXd"
{{ if eq .chezmoi.os "darwin" -}}
alias pgrep="$(command -pv pgrep) -fli"
{{- else }}
alias pgrep="$(command -pv pgrep) -fl"
{{- end }}
alias please='$(command -pv {{ if eq .chezmoi.os "openbsd" }}doas{{ else }}sudo{{ end }}) $(fc -ln -1)'
alias sort="LC_ALL=C $(command -pv sort)"
{{ if ne .chezmoi.os "openbsd" -}}
{{ if eq .chezmoi.os "darwin" -}}
alias flushdns="$(command -pv dscacheutil) -flushcache && /usr/bin/sudo killall -HUP mDNSResponder"
alias update='/usr/bin/sudo softwareupdate -i -a; brew update; brew upgrade; brew cleanup;'
{{- else if eq .chezmoi.osRelease.id "fedora" }}
alias update='/usr/bin/sudo /usr/bin/dnf upgrade --refresh -y; test -x /usr/bin/flatpak && /usr/bin/flatpak update -y; test -x /usr/bin/snap && /usr/bin/sudo /usr/bin/snap refresh; test -x /usr/bin/fwupdmgr && /usr/bin/fwupdmgr update;'
{{- else if eq .chezmoi.osRelease.id "arch" }}
alias update='/usr/bin/sudo /usr/bin/pacman -Syyu --noconfirm; test -x /usr/bin/flatpak && /usr/bin/flatpak update -y; test -x /usr/bin/snap && /usr/bin/sudo /usr/bin/snap refresh; test -x /usr/bin/fwupdmgr && /usr/bin/fwupdmgr update;'
{{- end }}
{{- end }}

PYTHON_BIN="$(command -v python3)"
if [ -n "${PYTHON_BIN}" ]; then
	alias urldecode='python3 -c "import sys, urllib.parse as ul; print(ul.unquote_plus(sys.argv[1]))"'
	alias urlencode='python3 -c "import sys, urllib.parse as ul; print(ul.quote_plus(sys.argv[1]))"'
fi

{{ if eq .chezmoi.os "linux" -}}
GIO_BIN="$(command -pv gio)"
if [ -n "${GIO_BIN}" ]; then
	alias open="${GIO_BIN} open"
else
	XDG_OPEN_BIN="$(command -pv xdg-open)"
	if [ -n "${XDG_OPEN_BIN}" ]; then
		alias open="${XDG_OPEN_BIN}"
	fi
fi

XCLIP_BIN="$(command -pv xclip)"
if [ -n "${XCLIP_BIN}" ]; then
	alias pbcopy="${XCLIP_BIN} -selection clipboard"
	alias pbpaste="${XCLIP_BIN} -selection clipboard -o"
fi
{{- end }}

{{ if ne .chezmoi.os "openbsd" -}}
DOCKER_BIN="$(command -v docker)"
if [ -n "${DOCKER_BIN}" ]; then
	alias dcips={{`$'docker inspect -f \'{{.Name}}-{{range  $k, $v := .NetworkSettings.Networks}}{{$k}}-{{.IPAddress}} {{end}}-{{range $k, $v := .NetworkSettings.Ports}}{{ if not $v }}{{$k}} {{end}}{{end}} -{{range $k, $v := .NetworkSettings.Ports}}{{ if $v }}{{$k}} => {{range . }}{{ .HostIp}}:{{.HostPort}}{{end}}{{end}} {{end}}\' $(docker ps -aq) | column -t -s-'`}}
fi
{{- end }}

THEFUCK_BIN="$(command -v thefuck)"
if [ -n "${THEFUCK_BIN}" ]; then
	eval $(${THEFUCK_BIN} --alias)
fi

BAT_BIN="$(command -v bat)"
if [ -n "${BAT_BIN}" ]; then
	alias cat='bat'
fi

if command -v procs >/dev/null 2>&1; then
	eval $(procs --gen-completion-out zsh)
fi

if command -v lsd >/dev/null 2>&1; then
	alias ls='lsd'
	if ! command -v tree >/dev/null 2>&1; then
		alias tree="lsd --tree"
	fi
else
{{- if eq .chezmoi.os "linux" }}
	alias ls="ls --color=auto -Fh"
{{- else }}
	alias ls="ls -Fh"
{{- end }}
fi

if [ -f "${HOME}/.zaliases.local" ]; then
	. "${HOME}/.zaliases.local"
fi
