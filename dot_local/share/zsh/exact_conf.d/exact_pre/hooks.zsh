# vim: set filetype=zsh:
# Do not edit this file directly! It is managed by chezmoi.

function update-env-vars() {
	renew-env SSH_AUTH_SOCK
}
add-zsh-hook preexec update-env-vars

typeset -F SECONDS
function record-start-time() {
	emulate -L zsh
	ZSH_START_TIME=${ZSH_START_TIME:-$SECONDS}
}
add-zsh-hook preexec record-start-time

function elapsed-time() {
	emulate -L zsh
	local DELTA="${1}"

	local DAYS=$((~~($DELTA / 86400)))
	local HOURS=$((~~(($DELTA - $DAYS * 86400) / 3600)))
	local MINUTES=$((~~(($DELTA - $DAYS * 86400 - $HOURS * 3600) / 60)))
	local SECS=$(($DELTA - $DAYS * 86400 - $HOURS * 3600 - $MINUTES * 60))
	local ELAPSED=''
	test "$DAYS" != '0' && ELAPSED="${DAYS}d"
	test "$HOURS" != '0' && ELAPSED="${ELAPSED}${HOURS}h"
	test "$MINUTES" != '0' && ELAPSED="${ELAPSED}${MINUTES}m"
	if [ "$ELAPSED" = '' ]; then
		SECS="$(print -f "%.2f" $SECS)s"
	elif [ "$DAYS" != '0' ]; then
		SECS=''
	else
		SECS="$((~~$SECS))s"
	fi
	ELAPSED="${ELAPSED}${SECS}"

	printf '%s' "${ELAPSED}"
}

function report-start-time() {
	emulate -L zsh
	if [ $ZSH_START_TIME ]; then
		local DELTA=$(($SECONDS - $ZSH_START_TIME))
		export RPROMPT="exe:$(elapsed-time ${DELTA})%f $RPROMPT_BASE"
		unset ZSH_START_TIME
	else
		export RPROMPT="$RPROMPT_BASE"
	fi
}
add-zsh-hook precmd report-start-time
