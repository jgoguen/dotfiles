# vim: set filetype=zsh:
# Do not edit this file directly! It is managed by chezmoi.

# Do not sort `git checkout` completions
zstyle ':completion:*:git-checkout:*' sort false

# Group support by setting descriptions. Do not use escape sequences here,
# fzf-tab ignores them
zstyle ':completion:*:descriptions' format '[%d]'

# Colourize file names in completions
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}

# Do not use zsh completion, delegate to fzf-tab entirely
zstyle ':completion:*' menu no

if (( ${+commands[lsd]} )); then
	# Enable directory preview when completing `cd`
	zstyle ':fzf-tab:complete:cd:*' fzf-preview 'lsd -1 --color=always $realpath'
fi

# Preview systemd unit status
zstyle ':fzf-tab:complete:systemctl-*:*' fzf-preview 'SYSTEMD_COLORS=1 systemctl status $word'

# Preview the value of an environment variable
zstyle ':fzf-tab:complete:(-command-|-parameter-|-brace-parameter-|export|unset|expand):*' fzf-preview 'echo ${(P)word}'

{{ if eq .chezmoi.os "darwin" -}}
# Preview Homebrew package info
zstyle ':fzf-tab:complete:brew-(install|uninstall|search|info):*-argument-rest' fzf-preview 'brew info $word'
{{- end }}

# Use FZF_DEFAULT_OPTS. This can cause problems with some options, use
# `zstyle ':fzf-tab:*' fzf-flags <flags>` to specify flags if this breaks
# things.
zstyle ':fzf-tab:*' use-fzf-default-opts yes

# FZF_DEFAULT_OPTS includes --border so increase padding
zstyle ':fzf-tab:*' fzf-pad 4

# Switch group using `<` and `>`
zstyle ':fzf-tab:*' switch-group '<' '>'

# Set some fzf-tab bindings
zstyle ':fzf-tab:*' fzf-bindings 'space:accept'

# Accept the suggestion and run in one keystroke
zstyle ':fzf-tab:*' accept-line enter

if [ -n "${TMUX:-""}" ]; then
	# If we're in tmux, use ftb-tmux-popup instead
	zstyle ':fzf-tab:*' fzf-command ftb-tmux-popup
	# zstyle ':fzf-tab:*' popup-pad 4 4

	local -a window_size=($(tmux display-message -p "#{window_width} #{window_height}"))
	min_width=$((window_size[1] / 3))
	min_height=$((window_size[2] / 4))
	zstyle ':fzf-tab:*' popup-min-size $min_width $min_height
fi

for dpath in $(find ~/.local/share/zsh/plugins/* -maxdepth 0 -type d); do
	name="$(basename "${dpath}")"
	source "${dpath}/${name}.plugin.zsh"
done
