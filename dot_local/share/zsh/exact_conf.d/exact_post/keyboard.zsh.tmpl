# vim: set filetype=zsh:
# Do not edit this file directly! It is managed by chezmoi.

# vi keybinds
bindkey -v

autoload zkbd

ZKBD_DIR="${XDG_STATE_HOME}/zsh/zkbd"
TERM_FILE="${ZKBD_DIR}/${TERM}"
if [ ! -d "#{ZKBD_DIR}" ]; then
	/usr/bin/install -d -m 0700 "${ZKBD_DIR}"
fi

if [ ! -f "${TERM_FILE}" ]; then
	zkbd
	# shellcheck disable=SC2039
	mv "${ZDOTDIR:-$HOME}/.zkbd/$TERM-${${DISPLAY:t}:-$VENDOR-$OSTYPE}" "${TERM_FILE}"
	rmdir "${ZDOTDIR:-$HOME}/.zkbd/$TERM-${${DISPLAY:t}:-$VENDOR-$OSTYPE}"
fi

# shellcheck source={{ .chezmoi.homeDir }}/.local/share/zsh/zkbd/xterm-256color
. "${ZKBD_DIR}"

[ -n "${key[Backspace]}" ] && bindkey "${key[Backspace]}" backward-delete-char
[ -n "${key[Insert]}" ] && bindkey "${key[Insert]}" overwrite-mode
[ -n "${key[Home]}" ] && bindkey "${key[Home]}" beginning-of-line
[ -n "${key[PageUp]}" ] && bindkey "${key[PageUp]}" up-line-or-history
[ -n "${key[Delete]}" ] && bindkey "${key[Delete]}" delete-char
[ -n "${key[End]}" ] && bindkey "${key[End]}" end-of-line
[ -n "${key[PageDown]}" ] && bindkey "${key[PageDown]}" down-line-or-history
[ -n "${key[Up]}" ] && bindkey "${key[Up]}" up-line-or-search
[ -n "${key[Left]}" ] && bindkey "${key[Left]}" backward-char
[ -n "${key[Down]}" ] && bindkey "${key[Down]}" down-line-or-search
[ -n "${key[Right]}" ] && bindkey "${key[Right]}" forward-char

# Move to start/end of line
bindkey '^a' beginning-of-line
bindkey '^e' end-of-line

# Move forward/backward by word
bindkey '^f' forward-word
bindkey '^b' backward-word

{{ if eq .chezmoi.os "darwin" -}}
if command -v brew >/dev/null 2>&1; then
	BREW_PREFIX="$(brew --prefix)"
	if [ -f "${BREW_PREFIX}/share/zsh-autosuggestions/zsh-autosuggestions.zsh" ]; then
		. "${BREW_PREFIX}/share/zsh-autosuggestions/zsh-autosuggestions.zsh"
	fi

	if [ -f "${BREW_PREFIX}/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh" ]; then
		. "${BREW_PREFIX}/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh"
	fi
fi
{{ else -}}
for PREFIX in /usr/local /usr; do
	if [ -f "${PREFIX}/share/zsh-autosuggestions/zsh-autosuggestions.zsh" ]; then
		. "${PREFIX}/share/zsh-autosuggestions/zsh-autosuggestions.zsh"
	fi

	if [ -f "${PREFIX}/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh" ]; then
		. "${PREFIX}/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh"
	fi
done
{{- end }}

if command -v fzf >/dev/null 2>&1; then
	source <(fzf --zsh)
fi

if zle -l autosuggest-accept ; then
	bindkey '^L' autosuggest-accept
fi
