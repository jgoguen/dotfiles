" vim: set noexpandtab tabstop=2 shiftwidth=2 autoindent:
" vim: set foldmarker=[[[,]]] foldmethod=marker foldlevel=0:
" Do not edit this file directly! It is managed by chezmoi.

scriptencoding 'utf-8'

" Do not write backup or swap files [[[
set nobackup
set noswapfile
set nowritebackup
" ]]]

" Set intelligent case insensitivity when searching [[[
set ignorecase
set smartcase
set tagcase=followscs
" ]]]

" Set up the number and sign columns [[[
set number
set relativenumber
if has('patch-8.1.1564')
	set signcolumn=number
else
	set signcolumn=yes
endif
" ]]]

" Configure indentation handling [[[
" Use current line's indentation when starting a new line
set autoindent

" Allow backspacing over everything in insert mode, C-w and C-u do not stop at
" start of insert
set backspace=indent,eol,nostop

 " Make >, <, >>, and << round to a multiple of shiftwidth
 set shiftround

 set shiftwidth=2

" Make autoindent more intelligent
set smartindent

" Let backspace and tab intelligently treat expanded tabs like tabs
set smarttab

set softtabstop=2

set tabstop=2
" ]]]

" Automatically read and write files appropriately [[[
" If a file is changed outside vim and not changed in vim, automatically read
" and display the new file contents
set autoread

" Write modified buffers when the buffer becomes hidden
set autowriteall
" ]]]

" Configure folding [[[
" Fold second-level and higher folds by default
set foldlevel=2

" Set a custom foldmarker to not conflict with templates
set foldmarker=[[[,]]]

" Fold using markers by default
set foldmethod=marker

" Dynamically determine the text shown when a region is folded
set foldtext=folding#CustomFoldText()
" ]]]

" Configure search match highlighting [[[
" Highlight all search matches
set hlsearch

" Highlight search matches while typing
set incsearch
" ]]]

" Configure list characters display (list and listchars) [[[
set list
" listchars options [[[
" tab:xy - Print x, then y as many times as possible in the tab space
" trail - Character to show for trailing spaces
" extends - Character to show when 'wrap' is off and line extends off-screen
" precedes - Character to show when line extends left off screen
" nbsp - Character to show for a non-breakable space
" conceal - Character to show for concealed text when conceallevel is 1
" ]]]
set listchars=tab:▷┅,trail:•,extends:»,precedes:«,nbsp:✖,conceal:≠
" ]]]

" Configure splits [[[
" Open splits below the current one by default
set splitbelow

" Open splits to the right of the current one by default
set splitright
" ]]]

" Configure colors [[[
" Use 24-bit RGB color in the terminal and use GUI color attributes instead of
" cterm attributes
set termguicolors

let cs = 'tokyonight'

if cs ==# 'material' && utils#HaveColorscheme('material')
	let g:material_terminal_italics = 1
	let g:material_theme_style = 'darker'

	" Set custom foreground color
	let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"

	" Set custom background color
	let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"

	colorscheme material
elseif cs ==# 'tokyonight' && utils#HaveColorscheme('tokyonight')
	let g:tokyonight_style = 'night'
	let g:tokyonight_sidebars = ['qf', 'vista_kind', 'terminal', 'packer', 'NvimTree', 'Fern', 'Tagbar', 'Outline']

	colorscheme tokyonight
endif
" ]]]

" Set program and format for :grep and :lgrep [[[
if executable('rg')
	set grepprg=rg\ --vimgrep\ --no-heading\ --smart-case
	set grepformat=%f:%l:%c:%m
elseif executable('ag')
	set grepprg=ag\ --nogroup\ --nocolor
endif
" ]]]

" Configure the status area [[[
" Use 2 lines for the command area at the bottom of the screen
set cmdheight=2

" Always show the status line
set laststatus=2

 " Shorten messages
 " m - Use [+] instead of [modified]
 " r - Use [RO] instead of [readonly]
 " I - Don't give the :intro message when starting vim
 set shortmess+=mrI

 " Don't show the mode, the airline extension will handle that
 set noshowmode
" ]]]

" Set display appropriate for dark backgrounds
set background=dark

" Highlight the column following 'textwidth'
set colorcolumn=+1

" Also scan current and included files for defined name or macro
set complete+=d

" Influence insert-mode completion
set completeopt=longest,menu,menuone,preview,noinsert

" Concealed text is hidden unless there's a custom replacement character
set conceallevel=2

" Confirm instead of failing operations
set confirm

" Highlight the line with the cursor
set cursorline

" Open diffs in vertical splits
set diffopt+=vertical

" Set characters for filling
set fillchars=vert:┃,fold:\ ,diff:-,eob:\ ,msgsep:‾

" Set formatting options [[[
" - t: Auto-wrap text using textwidth
" - c: Auto-wrap comments using textwidth, and insert the comment leader
" - q: Allow formatting comments with `gq`
" - n: Recognize numbered lists when formatting
" - m: Break at multibyte characters above 255
" - M: Don't insert a space before/after multibyte characters
" - 1: Break a line before a one-letter word instead of after
" - j: Remove a comment leader when joining lines if it makes sense
" ]]]
set formatoptions=tcqnmM1j

" Hide unloaded buffers instead of trying to close them
set hidden

" Do not insert two spaces after punctuation when joining lines
set nojoinspaces

" Don't redraw while executing macros, commands, etc.
set lazyredraw

" Intelligently break long lines
set linebreak

" Add matching pairs. % jumps between pairs
 set matchpairs+=<:>,「:」,『:』,【:】,“:”,‘:’,《:》,':',":"

 " Maximum number of items in a pop-up menu
 set pumheight=10

 " Number of lines above and below the cursor to keep visible
 set scrolloff=3

 " Show this character at the start of lines that have been wrapped
 set showbreak=↪

 " When a bracket is inserted, briefly show the matching bracket if it's
 " visible
 set showmatch

 " Use specific regional variations of English for spelling
 set spelllang=en_us,en_ca,en_gb

 " Keep the cursor in the current column if possible
 set nostartofline

 " Maximum width of text
 set textwidth=80

 " Wait less time for multi-character mappings
 set timeoutlen=500

 " Milliseconds until CursorHold is triggered
 set updatetime=100

 " Do not write a viminfo file
 set viminfofile=NONE

 " Allow a cursor to be placed where there's no character in Visual mode
 set virtualedit=block

 " Allow left/right arrows to go to the previous/next line
 set whichwrap+=<,>,[,]
