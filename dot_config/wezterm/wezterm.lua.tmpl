-- vim: set filetype=lua:
local wezterm = require("wezterm")
local has_site, site_config = pcall(require, "wezterm_local")

local config = {}

local function get_appearance()
	if wezterm.gui then
		return wezterm.gui.get_appearance()
	end
	return "Dark"
end

local function scheme_for_appearance(appearance)
	if appearance:find("Dark") then
		return "Catppuccin Mocha"
		--return "tokyonight_moon"
	else
		return "Catppuccin Latte"
		--return "tokyonight_day"
	end
end

-- Check for Windows
local font_set = {
	-- {{- if eq .chezmoi.os "windows" }}
	{
		family = "JetBrainsMono NFM",
		harfbuzz_features = {
			"zero=1",
			"ss02",
			"ss19",
			"ss20",
		},
	},
	-- {{- else }}
	{
		family = "JetBrainsMono Nerd Font Mono",
		harfbuzz_features = {
			"zero=1",
			"ss02",
			"ss19",
			"ss20",
			"cv99",
		},
	},
	-- {{- end }}
	{
		family = "FiraCode Nerd Font Mono",
		harfbuzz_features = {
			"ss02",
			"ss03",
			"ss05",
			"ss07",
			"cv22",
			"cv24",
			"cv25",
			"cv26",
			"cv32",
			"cv99",
		},
	},
	"Noto Sans CJK JP",
	"Symbols Nerd Font Mono",
}

-- {{- if eq .chezmoi.os "windows" }}
local _, stdout, _ = wezterm.run_child_process({ "cmd.exe", "ver" })
local _, _, build, _ = stdout:match("Version ([0-9]+)%.([0-9]+)%.([0-9]+)%.([0-9]+)")
local is_windows_11 = tonumber(build) >= 22000
-- {{- end }}

-- In newer versions of wezterm, use the config builder for better errors
config = wezterm.config_builder()

config.audible_bell = "Disabled"
config.automatically_reload_config = true
config.bold_brightens_ansi_colors = true
config.clean_exit_codes = { 130 }
config.color_scheme = scheme_for_appearance(get_appearance())
config.default_cwd = wezterm.home_dir
-- {{- if eq .chezmoi.os "linux" }}
config.enable_wayland = os.getenv("WAYLAND_DISPLAY") ~= nil
-- {{- end }}
config.font = wezterm.font_with_fallback(font_set)
config.font_size = 13
config.front_end = "WebGpu"

-- Explicitly set the defaults here since this might be appended to in site
-- config and we don't want to override the default set of rules.
config.hyperlink_rules = wezterm.default_hyperlink_rules()
-- {{- if eq .chezmoi.os "darwin" }}
config.integrated_title_button_alignment = "Left"
-- {{- end }}
config.keys = {
	{
		key = "PageUp",
		mods = "CTRL",
		action = wezterm.action({ ActivateTabRelative = -1 }),
	},
	{
		key = "LeftArrow",
		mods = "CMD",
		action = wezterm.action({ ActivateTabRelative = -1 }),
	},
	{
		key = "PageDown",
		mods = "CTRL",
		action = wezterm.action({ ActivateTabRelative = 1 }),
	},
	{
		key = "RightArrow",
		mods = "CMD",
		action = wezterm.action({ ActivateTabRelative = 1 }),
	},
	{
		key = "t",
		mods = "CMD",
		action = wezterm.action({
			SpawnCommandInNewTab = { cwd = wezterm.home_dir },
		}),
	},
	{
		key = "t",
		mods = "SHIFT|CTRL",
		action = wezterm.action({
			SpawnCommandInNewTab = { cwd = wezterm.home_dir },
		}),
	},
	{
		key = "w",
		mods = "CMD",
		action = wezterm.action.CloseCurrentTab({ confirm = false }),
	},
	{
		key = "w",
		mods = "SHIFT|CTRL",
		action = wezterm.action.CloseCurrentTab({ confirm = false }),
	},
	{
		key = "r",
		mods = "SHIFT|CTRL",
		action = wezterm.action.EmitEvent("do-resize-window"),
	},
}
config.mouse_bindings = {
	{
		event = { Down = { streak = 3, button = "Left" } },
		action = wezterm.action.SelectTextAtMouseCursor("SemanticZone"),
		mods = "NONE",
	},
}
-- {{- if eq .chezmoi.os "darwin" }}
config.macos_window_background_blur = 20
config.native_macos_fullscreen_mode = true
-- {{- end }}
-- {{- if eq .chezmoi.os "windows" }}
if is_windows_11 then
	config.quote_dropped_files = "Windows"
end
-- {{- else }}
config.quote_dropped_files = "Posix"
-- {{- end }}
config.selection_word_boundary = " \t\n{}[]()\"'`:"
config.visual_bell = {
	fade_in_duration_ms = 75,
	fade_out_duration_ms = 75,
	target = "CursorColor",
}
config.window_background_opacity = 0.9
config.window_close_confirmation = "NeverPrompt"

-- {{- if eq .chezmoi.os "darwin" }}
config.window_decorations = "RESIZE|TITLE"
-- {{- else }}
config.window_decorations = "RESIZE|TITLE|INTEGRATED_BUTTONS"
-- {{- end }}

-- {{ if eq .chezmoi.os "windows" -}}
if is_windows_11 then
	config.default_prog = { "pwsh.exe", "-NoLogo" }
end
-- {{- end }}

if has_site then
	config = site_config.update_config(config)
end

wezterm.on("format-tab-title", function(tab)
	local pane_title = tab.active_pane.title
	local user_title = tab.active_pane.user_vars.panetitle

	if user_title ~= nil and #user_title > 0 then
		pane_title = user_title
	end

	return {
		{ Text = " " .. pane_title .. " " },
	}
end)

local reset_window_size = function(gui_window)
	local screen = wezterm.gui.screens()["active"]

	-- Set default WezTerm size to a good chunk of the screen
	gui_window:set_inner_size(screen.width / 1.5, screen.height / 1.5)
	gui_window:set_position(screen.width / 6, screen.height / 9)
end

wezterm.on("gui-startup", function(cmd)
	local _, _, window = wezterm.mux.spawn_window(cmd or {})
	reset_window_size(window:gui_window())
end)

wezterm.on("do-resize-window", function(window)
	reset_window_size(window)
end)

wezterm.on("update-right-status", function(_)
	-- If adding anything to right status, keep it all above this point.
	for _, bat in ipairs(wezterm.battery_info()) do
		if bat.state == "Discharging" or bat.state == "Unknown" then
			config.webgpu_power_preference = "LowPower"
			return
		end
	end
	-- If we get here, no batteries were found discharging or unknown
	config.webgpu_power_preference = "HighPerformance"
end)

return config
