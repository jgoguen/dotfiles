" Do not edit this file directly! It is managed by chezmoi.

" Transparent editing of GPG files
augroup encrypted
	autocmd!

	" First make sure nothing is written to ~/.viminfo while editing an encrypted
	" file
	autocmd BufReadPre,FileReadPre *.gpg setlocal viminfo=

	" Disable options that write external files
	autocmd BufReadPre,FileReadPre *.gpg setlocal noswapfile noundofile nobackup

	" Switch to binary mode to read the encrypted file
	autocmd BufReadPre,FileReadPre *.gpg setlocal binary
	autocmd BufReadPre,FileReadPre *.gpg let ch_save = &ch|set ch=2
	if executable('gpg2')
		autocmd BufReadPost,FileReadPost *.gpg '[,']!gpg2 --decrypt 2> /dev/null
	else
		autocmd BufReadPost,FileReadPost *.gpg '[,']!gpg --decrypt 2> /dev/null
	endif

	" Switch to normal mode for editing
	autocmd BufReadPost,FileReadPost *.gpg setlocal nobinary
	autocmd BufReadPost,FileReadPost *.gpg let &ch = ch_save|unlet ch_save
	autocmd BufReadPost,FileReadPost *.gpg execute printf(':doautocmd BufReadPost %s', expand("%:r"))

	" Convert all text to encrypted text before writing
	if executable('gpg2')
		autocmd BufWritePre,FileWritePre *.gpg '[,']!gpg2 --default-recipient-self -sae 2>/dev/null
	else
		autocmd BufWritePre,FileWritePre *.gpg '[,']!gpg --default-recipient-self -sae 2>/dev/null
	endif

	" Undo the encryption so we are back in the normal text, directly after the file
	" has been written.
	autocmd BufWritePost,FileWritePost *.gpg silent undo
augroup END
