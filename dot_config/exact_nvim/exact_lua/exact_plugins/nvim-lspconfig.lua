-- Do not edit this file directly! It is managed by chezmoi.

local M = {
	'neovim/nvim-lspconfig',
	opts = {
		servers = {
			gopls = {
				settings = {
					gopls = {
						codelenses = {
							gc_details = false,
							generate = false,
							regenerate_cgo = false,
							test = false,
							tidy = false,
							upgrade_dependency = false,
							vendor = false,
						},
						directoryFilters = {
							'-bazel-bin',
							'-bazel-out',
							'-bazel-testlogs',
							'-bazel-gosre',
							'-bazel-genfiles',
							'-.git',
							'-.vscode',
							'-.idea',
							'-.vscode-test',
							'-node_modules',
						},
					},
				},
			},
			jsonls = {
				settings = {
					schemas = require('schemastore').json.schemas(),
					validate = {
						enable = true,
					},
				},
			},
			lua_ls = {
				settings = {
					Lua = {
						IntelliSense = {
							traceLocalSet = true,
							traceReturn = true,
						},
						telemetry = {
							enable = false,
						},
						runtime = {
							version = 'LuaJIT',
						},
						diagnostics = {
							globals = {
								'nvim',
								'vim',
								'require',
								'pcall',
								'_G',
								'os',
								'ipairs',
							},
							--neededFileStatus = {
							--	['codestyle-check'] = 'Any',
							--},
						},
						workspace = {
							checkThirdParty = false,
							library = vim.api.nvim_get_runtime_file('', true),
						},
					},
				},
			},
			prosemd_lsp = {
				filetypes = {
					'markdown',
					'pandoc.markdown',
				},
			},
			pyright = {
				settings = {
					python = {
						analysis = {
							autoImportCompletions = true,
							autoSearchPaths = true,
							diagnosticMode = 'workspace',
							useLibraryCodeForTypes = true,
						},
					},
				},
			},
			yamlls = {
				settings = {
					redhat = {
						telemetry = {
							enabled = false,
						},
					},
					yaml = {
						customTags = {
							'!include_dir_named',
							'!input scalar',
							'!lambda scalar',
							'!secret scalar',
						},
						format = {
							printWidth = 120,
							singleQuote = true,
						},
						schemas = {
							['http://json.schemastore.org/github-workflow'] = '.github/workflows/*.{yml,yaml}',
							['http://json.schemastore.org/github-action'] = '.github/action.{yml,yaml}',
							['http://json.schemastore.org/ansible-stable-2.9'] = 'roles/tasks/*.{yml,yaml},',
						},
					},
				},
			},
		},
	},
}

return M
