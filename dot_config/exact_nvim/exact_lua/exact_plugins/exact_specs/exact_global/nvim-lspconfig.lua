-- Do not edit this file directly! It is managed by chezmoi.

local Utils = require('utils')

local M = {
	'neovim/nvim-lspconfig',
	dependencies = {
		{
			'williamboman/mason.nvim',
			build = ':MasonUpdate',
		},
		'williamboman/mason-lspconfig.nvim',
		'hrsh7th/cmp-nvim-lsp',
		'KostkaBrukowa/definition-or-references.nvim',
	},
	opts = {
		mason = {
			ui = {
				icons = {
					package_installed = Utils.get_icon('Check'),
					package_uninstalled = Utils.get_icon('X'),
					packge_pending = Utils.get_icon('Reload'),
				},
			},
			border = 'rounded',
		},
		mason_lspconfig = {},
	},
}

function M.config(_, opts)
	local has_mason, Mason = pcall(require, 'mason')
	if has_mason then
		Mason.setup(opts.mason)
	end

	local has_mason_lspconfig, MasonLSPConfig = pcall(require, 'mason-lspconfig')
	if has_mason_lspconfig then
		MasonLSPConfig.setup(opts.mason_lspconfig)
	end

	local has_registry, Registry = pcall(require, 'mason-registry')
	if not has_registry then
		return
	end
	local server_mappings = require('utils.lsp.mapping').package_to_lspconfig

	for _, package_name in ipairs(Registry.get_installed_package_names()) do
		local server_name = server_mappings[package_name]
		if server_name ~= nil then
			require('utils.lsp').setup(server_name)
		end
	end
end

return M
