-- Do not edit this file directly! It is managed by chezmoi.

local Utils = require('utils')

local M = {}

---@param parsers string|string[]
function M.ensure_installed(parsers)
	local has_treesitter, TSInstall = pcall(require, 'nvim-treesitter.install')
	if not has_treesitter then
		return
	end

	TSInstall.ensure_installed(parsers)
end

---@param node_types string|string[]
function M.node_or_parent_is(node_types)
	return function()
		local has_treesitter, TSUtils = pcall(require, 'nvim-treesitter.ts_utils')
		if not has_treesitter then
			return false
		end

		---@type string[]
		local types = {}
		if type(node_types) == 'string' then
			types = { node_types }
		else
			types = node_types
		end

		local node = TSUtils.get_node_at_cursor()
		if node == nil then
			return false
		end

		local Notify = require('utils.notify')
		Notify.debug(types)
		repeat
			Notify.debug(node:type())
			if Utils.table_contains(types, node:type()) then
				return true
			end

			node = node:parent()
		until node == nil

		return false
	end
end

---@param node_types string|string[]
function M.node_or_parent_is_not(node_types)
	return function() return not M.node_or_parent_is(node_types)() end
end

return M
