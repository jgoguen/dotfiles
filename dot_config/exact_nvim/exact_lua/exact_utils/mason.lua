-- Do not edit this file directly! It is managed by chezmoi.

local M = {}

---@param server string
local function resolve_package(server)
	local has_mason, MasonLSPConfig = pcall(require, 'mason-lspconfig')
	if not has_mason then
		return nil
	end

	local has_registry, Registry = pcall(require, 'mason-registry')
	if not has_registry then
		return nil
	end

	local pkg_name = MasonLSPConfig.get_mappings().lspconfig_to_package[server]
	local has_pkg, pkg = pcall(Registry.get_package, pkg_name)
	if not has_pkg then
		return nil
	end

	return pkg
end

---@param servers string|string[]
function M.ensure_installed(servers)
	local has_package, Package = pcall(require, 'mason-core.package')
	if not has_package then
		return
	end

	---@type string[]
	local to_install = {}
	if type(servers) == 'string' then
		to_install = { servers }
	else
		to_install = servers
	end

	for _, server in ipairs(to_install) do
		local server_name, server_version = Package.Parse(server)
		local pkg = resolve_package(server_name)
		if pkg ~= nil then
			if not pkg:is_installed() then
				require('mason-lspconfig.install').install(pkg, server_version)
			end
		end
	end
end

return M
