# vim: set filetype=gitconfig:
# Do not edit this file directly! It is managed by chezmoi.

[advice]
	skippedCherryPicks = false

[alias]
	amend = commit --amend -a --no-edit
	branches = branch -a -l
	delete-merged = "!f() { \
		HEAD_BRANCH=\"$(git remote show origin | awk '/HEAD branch/ {print $NF}')\"; \
		git for-each-ref refs/heads/ --format='%(refname:short)' | \
			grep -v \"^${HEAD_BRANCH}\\$\" | \
			xargs -I {} sh -c ' \
				if git log \"${HEAD_BRANCH}\"..\"{}\" --not --all --quiet; then \
					git branch -D \"{}\"; \
				fi'; \
	}; f"
	discard = reset --hard HEAD
	dm = delete-merged
	irebase = !f() { git rebase -i HEAD~$1; }; f
	latest = !git checkout master && git pull origin master && git submodule update --recursive
	lg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
	outdated = !git-rebase-needed
	qup = "!f() { \
		if [ -z \"$1\" ]; then \
			return; \
		fi; \
		git switch $1; \
	}; \
	HEAD_BRANCH=\"$(git remote show origin | awk '/HEAD branch/ {print $NF}')\"; \
	f $(git for-each-ref --sort=-committerdate refs/heads/ --format='%(objectname:short) %(HEAD)%(refname:short)' | grep -Ev \"\\*|\\s${HEAD_BRANCH}$\" | fzf --layout=reverse-list --select-1 | awk '{print $2}')"
	remotes = remote -v
	shelve = stash save
	sl = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(auto)%d%C(reset)%n''            %C(white)%s%C(reset) %C(dim white)- %an <%aE>%C(reset)'
	unstage = reset
	uncommit = reset --soft HEAD^
	unshelve = stash pop

[apply]
	whitespace = fix

[blame]
	date = iso-local

[branch]
	autosetuprebase = always
	autosetupmerge = true

[color]
	ui = true

[color "branch"]
	current = yellow reverse
	local = yellow
	remote = green

[color "diff"]
	frag = magenta bold
	meta = yellow bold
	new = green bold
	old = red bold
	whitespace = red reverse

[color "status"]
	added = yellow
	changed = green
	untracked = cyan

[column]
	ui = auto

[commit]
	gpgsign = true
	template = {{ .chezmoi.homeDir }}/.config/git/commit_template
	verbose = true

[core]
	autocrlf = input
	editor = nvim
	eol = lf
	quotePath = true
	{{- if eq .chezmoi.os "windows" }}
	sshCommand = C:/Windows/System32/OpenSSH/ssh.exe
	{{- end }}
	untrackedCache = true
	whitespace = fix,-cr-at-eol,-indent-with-non-tab,space-before-tab,-tab-in-indent,trailing-space

[diff]
	algorithm = patience
	noprefix = true
	renames = copies
	submodule = log

[fetch]
	prune = true
	recurseSubmodules = true

[format]
	graph = true

[gc]
	auto = 1

[git-extras "get"]
	clone-path = {{ .chezmoi.homeDir }}/Code

[github]
	user = {{ (onepasswordDetailsFields "yaim2h545jdgdfvlepphtyql3i" "" "S5JCIBMKLZDDLDQGA76BYGOZGA").username.value }}
	token = {{ (onepasswordItemFields "yaim2h545jdgdfvlepphtyql3i" "" "S5JCIBMKLZDDLDQGA76BYGOZGA").jgoguen.value }}

[gpg]
	format = ssh

[gpg "openpgp"]
{{- if eq .chezmoi.os "darwin" }}
	program = {{ if eq .chezmoi.arch "arm64" }}/opt/homebrew{{ else }}/usr/local{{ end }}/bin/gpg
{{- else }}
	program = /usr/bin/gpg2
{{- end }}

[gpg "ssh"]
	allowedSignersFile = {{ .chezmoi.homeDir }}/.config/git/allowed_signers
{{- if eq .environment "personal" }}
{{- if eq .chezmoi.os "darwin" }}
	program = /Applications/1Password.app/Contents/MacOS/op-ssh-sign
{{- else if eq .chezmoi.os "windows" }}
	program = "C:/Users/jgogu/AppData/Local/1Password/app/8/op-ssh-sign.exe"
{{- else }}
	program = /opt/1Password/op-ssh-sign
{{- end }}
{{- end }}

[grep]
	lineNumber = true
	patternType = perl

[help]
	autocorrect = 1

[http]
	followRedirects = true

[i18n]
	commitEncoding = utf-8
	logOutputEncoding = utf-8

[init]
	defaultBranch = main

[log]
	abbrev-commit = true
	date = iso-local
	decorate = auto

[merge]
	conflictstyle = diff3
	status = true
	summary = true

[pager]
	difftool = true

[pull]
	ff = only
	rebase = true

[push]
	autoSetupRemote = true
	default = current
	gpgSign = if-asked

[rebase]
	autosquash = true
	autostash = true
	updateRefs = true

[rerere]
	enabled = true

[stash]
	showPatch = true

[status]
	showStash = true
	submoduleSummary = true

[stgit]
  autostash = grue
  keepoptimized = true

[submodule]
	recurse = true

[tag]
	forceSignAnnotated = true
	gpgSign = true

[user]
	name = Joel Goguen
	email = {{ .github.email }}
	signingkey = {{ .github.gpgkey }}

[include]
	path = ~/.config/git/config.local
