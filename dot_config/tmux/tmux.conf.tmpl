# vim: set noexpandtab tabstop=2 shiftwidth=2 filetype=tmux:
# Do not edit this file directly! It is managed by chezmoi.

# Reset prefix to C-a [[[
unbind-key C-b
set-option -g prefix C-a
bind-key C-a send-prefix # For nested sessions
# ]]]

# NOTE: This assumes you have only one config file in use
TMUX_BASE="#{d:config_files}"

# General options [[[
# Do not wait for function or key sequence after <Esc>
set-option -sg escape-time 0

# Allow using the mouse to scroll
set-option -g mouse on

# upgrade $TERM
set-option -g default-terminal "tmux-256color"
set-option -sa terminal-overrides ',*256col*:RGB'

# Define colors [[[
# TokyoNight [[[
TOKYONIGHT_NIGHT_BLACK='#1d202f'
TOKYONIGHT_NIGHT_BLUE='#7aa2f7'
TOKYONIGHT_NIGHT_YELLOW='#e0af68'
TOKYONIGHT_NIGHT_RED='#f7768e'
TOKYONIGHT_NIGHT_WHITE='#a9b1d6'
TOKYONIGHT_NIGHT_GREEN='#9ece6a'
TOKYONIGHT_NIGHT_GRAY='#3b4261'
# ]]]

# TokyoNight Day [[[
TOKYONIGHT_DAY_BLACK='#e9e9ed'
TOKYONIGHT_DAY_BLUE='#2e7de9'
TOKYONIGHT_DAY_YELLOW='#8c6c3e'
TOKYONIGHT_DAY_RED='#f52a65'
TOKYONIGHT_DAY_WHITE='#ffffff'
TOKYONIGHT_DAY_GREEN='#587539'
TOKYONIGHT_DAY_GRAY='#666666'
# ]]]
# ]]]

set-option -g mode-style "fg=${TOKYONIGHT_DAY_BLUE},bg=${TOKYONIGHT_DAY_GRAY}"
set-option -g message-command-style "fg=${TOKYONIGHT_DAY_BLUE},bg=${TOKYONIGHT_DAY_GRAY}"

# Default statusbar colours
set-option -g status-style "fg=${TOKYONIGHT_DAY_BLUE},bg=#1f2335"

# Undercurl support
set-option -sa terminal-overrides ',*:Smulx=\E[4::%p1%dm'
set-option -sa terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'

# focus events enabled for terminals that support them
set-option -g focus-events on

# Start window numbering at 1
set-option -g base-index 1
set-option -g pane-base-index 1
set-window-option -g pane-base-index 1

# Renumber windows when closing
set-option -g renumber-windows on

# Monitor for activity
set-window-option -g monitor-activity on

# Lotsa window line history!
set-option -g history-limit 250000

# Use WM titles
set-option -g set-titles on
set-option -g set-titles-string "#{pane_title}"
set-window-option -g automatic-rename on
set-option -g automatic-rename-format "#{s/zsh/‚ùØ shell:#{pane_current_command}}"

# For vim
set-window-option -g xterm-keys on

# Deal with issues where tmux draws a field of dots when resizing
set-window-option -g aggressive-resize off
# ]]]

# Key bindings [[[
# vim keybindings in copy mode
set-window-option -g mode-keys vi
# vim keybindings in status line
set-window-option -g status-keys vi

# Command prompt
bind-key : command-prompt

# Reload settings
bind-key r source-file ~/.config/tmux/tmux.conf \; display-message "tmux config reloaded"

# Detach
bind-key d detach
bind-key C-d detach

# Display a visible indicator of each pane
bind-key p display-panes

# Quick pane switching (requires sainnhe/tmux-fzf plugin)
bind-key w run-shell "${TMUX_BASE}/plugins/tmux-fzf/scripts/pane.sh switch"
# No pane previews
set-environment -g TMUX_FZF_PREVIEW 0

# Screen-like bindings
bind-key c new-window -c~
bind-key C-c new-window -c~

# Splits
unbind %
bind-key - split-window -v -c "#{pane_current_path}"
bind-key _ split-window -v -c "#{pane_current_path}"
bind-key s split-window -v -c "#{pane_current_path}"
bind-key | split-window -h -c "#{pane_current_path}"
bind-key v split-window -h -c "#{pane_current_path}"
bind-key ^ last-pane
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R
bind-key -r < resize-pane -L 3
bind-key -r > resize-pane -R 3
bind-key -r + resize-pane -U 1
bind-key -r = resize-pane -D 1

bind-key a last-window
bind-key C-p previous-window
bind-key C-n next-window

bind-key , command-prompt -p "Rename window to:" "rename-window %1"
set-option -g allow-rename off

# vi copy/paste
bind-key [ copy-mode -e # screen-style
bind-key ] paste-buffer -p
unbind-key -T copy-mode-vi v
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel

bind-key -n C-j choose-tree -Z
bind-key g display-popup -E "tmux new-session -A -s scratch"
bind-key t display-popup -E "tmux new-session -A -s todo \"test -d ~/todo || mkdir ~/todo; cd ~/todo && nvim -O backlog.md doing.md done.md\""
# ]]]

# Statusbar [[[
# Display a message instead of sounding a bell
set-option -g visual-activity on

# Display status line indicators and messages for 4 seconds
set-option -g display-time 4000

# Redraw the status line every 5 seconds
set-option -g status-interval 5

# clock
set-window-option -g clock-mode-colour green #green
set-window-option -g clock-mode-style 12

set-option -g pane-active-border-style "fg=${TOKYONIGHT_DAY_BLUE}"
set-option -g pane-border-style "fg=${TOKYONIGHT_DAY_GRAY}"
set-option -g message-style "bg=${TOKYONIGHT_DAY_GRAY},fg=${TOKYONIGHT_DAY_BLUE}"
set-option -g status-style "bg=${TOKYONIGHT_DAY_GRAY},fg=${TOKYONIGHT_DAY_BLUE}"

# Status bar format
set-option -g status "on"
set-option -g status-justify "left"
set-option -g status-left "#[bg=${TOKYONIGHT_DAY_BLUE},fg=${TOKYONIGHT_DAY_BLACK}] #{tmux_mode_indicator} "
set-option -g status-right "#[fg=${TOKYONIGHT_DAY_BLACK},bg=${TOKYONIGHT_DAY_BLUE},nobold] [ #{host_short} ] [ CPU: #{cpu_percentage} ] [ RAM: #{ram_percentage} ] [ Batt: #{battery_percentage} #{battery_remain} ]"
set-option -g status-right-length 100
set-window-option -g window-status-current-format "#[fg=${TOKYONIGHT_DAY_BLACK},bold,bg=${TOKYONIGHT_DAY_WHITE}] [ #{window_index} #{window_name} ] "
set-window-option -g window-status-format "#[fg=${TOKYONIGHT_DAY_WHITE},nobold,bg=${TOKYONIGHT_DAY_GRAY}] #{window_index} #{window_name} "
# ]]]

# Plugins [[[
set-option -g @plugin 'tmux-plugins/tpm'
set-option -g @plugin 'MunifTanjim/tmux-mode-indicator'
set-option -g @plugin 'sainnhe/tmux-fzf'
set-option -g @plugin 'tmux-plugins/tmux-battery'
set-option -g @plugin 'tmux-plugins/tmux-continuum'
set-option -g @plugin 'tmux-plugins/tmux-cpu'
set-option -g @plugin 'tmux-plugins/tmux-resurrect'

set-option -g @batt_remain_short true
set-option -g @continuum-restore 'on'
set-option -g @continuum-save-interval '5'
set-option -g @resurrect-capture-pane-contents 'on'
set-option -g @resurrect-dir '~/.local/share/tmux/resurrect'

{{ if eq .environment "personal" -}}
set-option -g @plugin 'yardnsm/tmux-1password'
set-option -g @1password-account {{ (onepasswordItemFields "ikmpz644kh5vugsho3wilerm7e").UserID.value }}
{{- end }}

# Keep this at the very end of the file!
set-environment -Fg TMUX_PLUGIN_MANAGER_PATH "${TMUX_BASE}/plugins"
if "test ! -d ${TMUX_BASE}/plugins/tpm" \
	"run-shell git clone https://github.com/tmux-plugins/tpm ${TMUX_BASE}/plugins/tpm && ${TMUX_BASE}/plugins/tpm/bin/install_plugins"
run-shell "${TMUX_BASE}/plugins/tpm/tpm"
# ]]]
