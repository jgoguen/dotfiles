# vim: set filetype=tmux:
# Do not edit this file directly! It is managed by chezmoi.

# Reset prefix to C-a [[[
unbind-key C-b
set-option -g prefix C-a
bind-key C-a send-prefix # For nested sessions
# ]]]

# General options [[[
# Do not wait for function or key sequence after <Esc>
set-option -sg escape-time 0

# No mouse support
set-option -g mouse off

# upgrade $TERM
set-option -g default-terminal "tmux-256color"
set-option -sa terminal-overrides ',*256col*:RGB'
set-option -sa terminal-overrides ',xterm*:Tc'

# Undercurl support
set-option -sa terminal-overrides ',*:Smulx=\E[4::%p1%dm'
set-option -sa terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'

# focus events enabled for terminals that support them
set-option -g focus-events on

# Start window numbering at 1
set-option -g base-index 1
set-option -g pane-base-index 1
set-option -gw pane-base-index 1

# Renumber windows when closing
set-option -g renumber-windows on

# Monitor for activity
set-option -gw monitor-activity on

# Lotsa window line history!
set-option -g history-limit 250000

# Use WM titles
set-option -g set-titles on
set-option -g set-titles-string "#{s/zsh/❯ shell:#{pane_current_command}}"
set-option -gw automatic-rename on
set-option -g automatic-rename-format "#{s/zsh/❯ shell:#{pane_current_command}}"

# For vim
set-option -gw xterm-keys on

# Deal with issues where tmux draws a field of dots when resizing
set-option -gw aggressive-resize off
# ]]]

# Key bindings [[[
# vim keybindings in copy mode
set-option -gw mode-keys vi
# vim keybindings in status line
set-option -gw status-keys vi

# Command prompt
bind-key : command-prompt

# Reload settings
bind-key r source-file ~/.config/tmux/tmux.conf \; display-message "tmux config reloaded"

# Detach
bind-key d detach
bind-key C-d detach

# Display a visible indicator of each pane
bind-key p display-panes

# Quick pane switching (requires sainnhe/tmux-fzf plugin)
bind-key w run-shell "~/.config/tmux/plugins/tmux-fzf/scripts/pane.sh switch"
# No pane previews
set-environment -g TMUX_FZF_PREVIEW 0

# Screen-like bindings
bind-key c new-window -c~
bind-key C new-window -c "#{pane_current_path}"
bind-key C-c new-window -c~

# Splits
unbind %
bind-key - split-window -v -c "#{pane_current_path}"
bind-key _ split-window -v -c "#{pane_current_path}"
bind-key s split-window -v -c "#{pane_current_path}"
bind-key | split-window -h -c "#{pane_current_path}"
bind-key v split-window -h -c "#{pane_current_path}"
bind-key ^ last-pane
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R
bind-key -r < resize-pane -L 3
bind-key -r > resize-pane -R 3
bind-key -r + resize-pane -U 1
bind-key -r = resize-pane -D 1

bind-key a last-window
bind-key C-p previous-window
bind-key C-n next-window

bind-key , command-prompt -p "Rename window to:" "rename-window %1"
set-option -g allow-rename off

# vi copy/paste
bind-key [ copy-mode -e # screen-style
bind-key ] paste-buffer -p
unbind-key -T copy-mode-vi v
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel

bind-key / display-popup -E "tmux new-session -A -s scratch"
# ]]]

# Statusbar [[[
# Display a message instead of sounding a bell
set-option -g visual-activity on

# Display status line indicators and messages for 4 seconds
set-option -g display-time 4000

# Redraw the status line every 5 seconds
set-option -g status-interval 5

# clock
set-option -gw clock-mode-colour green #green
set-option -gw clock-mode-style 12

# Catppuccin warns TPM users to load the theme first
set-option -g @catppuccin_window_flags "icon"
set-option -g @catppuccin_flavour 'mocha'
set-option -g @catppuccin_window_status_style "rounded"

set-option -g @catppuccin_pane_status_enabled "yes"
set-option -g @catppuccin_pane_border_status "yes"

if-shell "[ -f #{d:current_file}/plugins/tmux/catppuccin.tmux ]" "run-shell #{d:current_file}/plugins/tmux/catppuccin.tmux"

# Status bar format
set-option -g status-left " #{tmux_mode_indicator} "
set-option -gF status-right "#{E:@catppuccin_status_application}"
set-option -agF status-right "#{E:@catppuccin_status_cpu}"
set-option -agF status-right "#{E:@catppuccin_status_battery}"
set-option -agF status-right "#{T:%%H:%%m}"
# ]]]

# Plugins [[[
# Tmux Plugin Manager
set-option -g @plugin 'tmux-plugins/tpm'
# Catppuccin theme for tmux
set-option -g @plugin 'catppuccin/tmux'
# Navigate vim and tmux windows natively
set-option -g @plugin 'christoomey/vim-tmux-navigator'
# Show tmux mode with #{tmux_mode_indicator}
set-option -g @plugin 'MunifTanjim/tmux-mode-indicator'
# fzf for tmux management
set-option -g @plugin 'sainnhe/tmux-fzf'
# Enable battery format strings in status-right:
# https://github.com/tmux-plugins/tmux-battery?tab=readme-ov-file#supported-format-strings
set-option -g @plugin 'tmux-plugins/tmux-battery'
# Enable CPU and GPU format strings in status-right:
# https://github.com/tmux-plugins/tmux-cpu?tab=readme-ov-file#supported-options
set-option -g @plugin 'tmux-plugins/tmux-cpu'
# Use fzf to open URLs shown in tmux without mouse action
set-option -g @plugin 'wfxr/tmux-fzf-url'

set-option -g @batt_remain_short true

set-option -g @mode_indicator_prefix_mode_style "fg=#{@thm_crust},bg=#{@thm_blue}"
set-option -g @mode_indicator_copy_mode_style "fg=#{@thm_crust},bg=#{@thm_yellow}"
set-option -g @mode_indicator_sync_mode_style "fg=#{@thm_crust},bg=#{thm_red}"
set-option -g @mode_indicator_empty_mode_style "fg=#{@thm_crust},bg=#{@thm_sky}"

{{ if or (eq .environment "personal") (eq .environment "headless") -}}
# Access 1Password login items via CLI in tmux
set-option -g @plugin 'yardnsm/tmux-1password'
set-option -g @1password-account {{ (onepasswordItemFields "ikmpz644kh5vugsho3wilerm7e" "" "S5JCIBMKLZDDLDQGA76BYGOZGA").UserID.value }}
{{- end }}

# Keep this at the very end of the file!
set-environment -Fg TMUX_PLUGIN_MANAGER_PATH "~/.config/tmux/plugins"
if-shell "test ! -d ~/.config/tmux/plugins/tpm" 'run-shell "git clone https://github.com/tmux-plugins/tpm ~/.config/tmux/plugins/tpm"'
if-shell "test ! -d ~/.config/tmux/plugins/tmux-fzf" 'run-shell "~/.config/tmux/plugins/tpm/bin/install_plugins"'
run-shell "~/.config/tmux/plugins/tpm/tpm"
# ]]]
