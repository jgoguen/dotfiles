# vim: set filetype=zsh:
# Do not edit this file directly! It is managed by chezmoi.

# Set XDG variables for UNIX apps. Use Linux-standard paths even on macOS
# because chezmoi can't deploy to a different location per OS.
export XDG_CACHE_HOME="${HOME}/.cache"
export XDG_CONFIG_HOME="${HOME}/.config"
export XDG_DATA_HOME="${HOME}/.local/share"
export XDG_STATE_HOME="${HOME}/.local/state"

# Set path first, so many other things depend on it
typeset -U path
for bindir in /bin /sbin /usr/bin /usr/sbin /System/Cryptexes/App/usr/bin /usr/local/bin /usr/local/sbin /var/lib/snapd/snap/bin /usr/local/go/bin /usr/local/nodejs/current/bin /Library/TeX/Distributions/Programs/texbin /opt/local/bin /opt/local/sbin /opt/homebrew/bin "${HOME}/.cargo/bin" "${HOME}/.dotnet/tools" "${HOME}/bin" "${HOME}/.local/bin"; do
	if [ -d "${bindir}" ]; then
		path=(${bindir} ${path})
	fi
done

if [ -f '/opt/google-cloud-sdk/completion.zsh.inc' ]; then
	source '/opt/google-cloud-sdk/completion.zsh.inc'
fi
if [ -f '/opt/google-cloud-sdk/path.zsh.inc' ]; then
	source '/opt/google-cloud-sdk/path.zsh.inc'
fi

# Add paths for languages
# Add Go paths
{{ if eq .chezmoi.os "darwin" -}}
export GOPATH="${HOME}/Library/Application Support/go"
{{- else }}
export GOPATH="${XDG_STATE_HOME}/go"
{{- end }}
while read -d ':' pathname; do
	if [ -n "${pathname}" ] && [ -d "${pathname}" ]; then
		path=(${pathname}/bin ${path})
	fi
done < <(printf '%s' "${GOPATH}")

IFS=':' read -rA PATHNAME <<<"${GOPATH}"
for dname in "${PATHNAME[@]}"; do
	if [ ! -d "${dname}" ]; then
		/usr/bin/install -d -m 0700 "${dname}"
	fi
done

export PATH

: "${KITTY_WINDOW_ID:=""}"
if [ -n "${KITTY_WINDOW_ID}" ]; then
	export TERM=vte-256color
fi

if [ ! -d "${XDG_CACHE_HOME}" ]; then
	/usr/bin/install -d -m 0700 "${XDG_CACHE_HOME}"
fi
if [ ! -d "${XDG_CONFIG_HOME}" ]; then
	/usr/bin/install -d -m 0700 "${XDG_CONFIG_HOME}"
fi
if [ ! -d "${XDG_DATA_HOME}" ]; then
	/usr/bin/install -d -m 0700 "${XDG_DATA_HOME}"
fi
if [ ! -d "${XDG_STATE_HOME}" ]; then
	/usr/bin/install -d -m 0700 "${XDG_STATE_HOME}"
fi

if command -v clang >/dev/null 2>&1; then
	export CC="$(command -v clang)"
fi

if command -v nvim >/dev/null 2>&1; then
	export EDITOR="$(command -v nvim)"
elif command -v vim >/dev/null 2>&1; then
	export EDITOR="$(command -v vim)"
else
	export EDITOR=vi
fi
export VISUAL="${EDITOR:-vi}"

export FZF_DEFAULT_OPTS=" \
	--height=~40% --layout=reverse --border --select-1 --exit-0 \
	--color=bg+:#313244,bg:#1e1e2e,spinner:#f5e0dc,hl:#f38ba8 \
	--color=fg:#cdd6f4,header:#f38ba8,info:#cba6f7,pointer:#f5e0dc \
	--color=marker:#f5e0dc,fg+:#cdd6f4,prompt:#cba6f7,hl+:#f38ba8 \
"

export GTK_IM_MODULE="ibus"
export HISTFILE="${XDG_CACHE_HOME}/zsh_history"
export HISTSIZE=250000000

if [ ! -f "${HISTFILE}" ]; then
	/usr/bin/install -D -m 0600 /dev/null "${HISTFILE}"
fi

export LG_CONFIG_FILE="${XDG_CONFIG_HOME}/lazygit/config.yml,${XDG_CONFIG_HOME}/lazygit/catppuccin-mocha-mauve.yaml"

export MAILCHECK=0
export PAGER="less -FRXd"
export PROMPT_RETURNCODE_PREFIX="%{$fg_bold[red]%}"
export RIPGREP_CONFIG_PATH="${XDG_CONFIG_HOME}/ripgrep.conf"
export QT_IM_MODULE="ibus"
export SAVEHIST=${HISTSIZE}

{{- if eq .chezmoi.os "linux" }}
export SNAP_USER_COMMON="${XDG_CONFIG_HOME}/snaps"
export SNAP_USER_DATA="${XDG_CONFIG_HOME}/snaps"

{{- if ne .environment "headless" }}
# Force 1Password CLI to use app integration
export OP_BIOMETRIC_UNLOCK_ENABLED=true
{{- end }}
{{- end }}

if [ -S "${HOME}/.1password/agent.sock" ]; then
	export SSH_AUTH_SOCK="${HOME}/.1password/agent.sock"
fi

export TEXMFCONFIG="${XDG_CONFIG_HOME}/texlive"
export TEXMFHOME="${XDG_DATA_HOME}/texlive/texmf"
export TEXMFVAR="${XDG_DATA_HOME}/texlive/var"

# Prompt modifiers for starship prompt
# export VCS_PROMPT_AHEAD="%{$fg_bold[magenta]%}↑"
# export VCS_PROMPT_PREFIX=" $fg[white]‹ %{$fg_bold[yellow]%}"
# export VCS_PROMPT_STAGED="%{$fg_bold[green]%}●"
# export VCS_PROMPT_SUFFIX=" $fg_bold[white]›%{$reset_color%}"
# export VCS_PROMPT_UNMERGED="%{$fg_bold[red]%}✕"
# export VCS_PROMPT_UNSTAGED="%{$fg_bold[red]%}●"
# export VCS_PROMPT_UNTRACKED="%{$fg_bold[white]%}●"

export XMODIFIERS="@im=ibus"

if [ ! -d "${TEXMFCONFIG}" ]; then
	/usr/bin/install -d -m 0700 "${TEXMFCONFIG}"
fi

NODE_PATH="${HOME}/.local/lib/node_modules:${NODE_PATH}"

MAN_BIN="$(command -v manpath)"
if command -v manpath >/dev/null 2>&1 && [ -z "${MANPATH}" ]; then
	MANPATH="${XDG_DATA_HOME}/man:/opt/local/share/man:$(command manpath 2>/dev/null)"
	export MANPATH
fi

export LC_ALL="en_CA.UTF-8"
export LANG="en_CA.UTF-8"

if [ -f "${HOME}/.zshenv.local" ]; then
	. "${HOME}/.zshenv.local"
fi
